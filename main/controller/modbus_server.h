#ifndef MODBUS_SERVER_H_INCLUDED
#define MODBUS_SERVER_H_INCLUDED


#include "model/model.h"


typedef enum {
    HOLDING_REGISTER_VERSION_HIGH = 0,
    HOLDING_REGISTER_VERSION_LOW,
    HOLDING_REGISTER_BUILD_DATE,
    HOLDING_REGISTER_COMMAND,
    HOLDING_REGISTER_PWM1,
    HOLDING_REGISTER_PWM2,

    HOLDING_REGISTER_TIPO_SONDA_TEMPERATURA = 10,
    HOLDING_REGISTER_TEMPERATURA_SICUREZZA,
    HOLDING_REGISTER_TEMPO_ALLARME_TEMPERATURA,
    HOLDING_REGISTER_TIPO_MACCHINA_OCCUPATA,
    HOLDING_REGISTER_TIPO_RISCALDAMENTO,
    HOLDING_REGISTER_TEMPO_ATTESA_PARTENZA_CICLO,
    HOLDING_REGISTER_FLAG_CONFIGURAZIONE,

    HOLDING_REGISTER_NUMERO_PROGRAMMA = 50,
    HOLDING_REGISTER_NUMERO_STEP,
    HOLDING_REGISTER_TIPO_STEP,
    HOLDING_REGISTER_TEMPO_MARCIA,
    HOLDING_REGISTER_TEMPO_PAUSA,
    HOLDING_REGISTER_TEMPO_DURATA,
    HOLDING_REGISTER_VELOCITA,
    HOLDING_REGISTER_TEMPERATURA,
    HOLDING_REGISTER_UMIDITA,
    HOLDING_REGISTER_FLAG_CONFIGURAZIONE_STEP,
    HOLDING_REGISTER_ISTERESI_TEMPERATURA_ON_RES2,
    HOLDING_REGISTER_ISTERESI_TEMPERATURA_OFF_RES1,
    HOLDING_REGISTER_TEMPERATURA_AVVIO_VAPORIZZAZIONE,
    HOLDING_REGISTER_DURATA_VAPORIZZAZIONE,
    HOLDING_REGISTER_ATTESA_DEODORIZZAZIONE,
    HOLDING_REGISTER_TEMPO_DEODORIZZAZIONE,
            
    HOLDING_REGISTER_NUMERO_CICLI,
    HOLDING_REGISTER_TEMPO_RITARDO,

    HOLDING_REGISTER_STATE = 100,
    HOLDING_REGISTER_ALLARMS,
    HOLDING_REGISTER_FLAG_FUNZIONAMENTO,
    HOLDING_REGISTER_TEMPO_RIMANENTE,
            
    HOLDING_REGISTER_CICLI_TOTALI = 150,
    HOLDING_REGISTER_CICLI_PARZIALI,
    HOLDING_REGISTER_TEMPO_ATTIVITA_HI,
    HOLDING_REGISTER_TEMPO_ATTIVITA_LO,
    HOLDING_REGISTER_TEMPO_LAVORO_HI,
    HOLDING_REGISTER_TEMPO_LAVORO_LO,
    HOLDING_REGISTER_TEMPO_MOTO_HI,
    HOLDING_REGISTER_TEMPO_MOTO_LO,
    HOLDING_REGISTER_TEMPO_VENTILAZIONE_HI,
    HOLDING_REGISTER_TEMPO_VENTILAZIONE_LO,
    HOLDING_REGISTER_TEMPO_RISCALDAMENTO_HI,
    HOLDING_REGISTER_TEMPO_RISCALDAMENTO_LO,
} holding_register_t;


void modbus_server_init(void);
void modbus_server_manage(model_t *pmodel);

#endif